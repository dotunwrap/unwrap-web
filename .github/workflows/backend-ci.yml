name: Backend/CI
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - backend/**
  push:
    branches:
      - master
    paths:
      - backend/**
permissions:
  contents: read
concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true
env:
  MODULE_DIR: ./backend
  GO_VERSION: 1.25.2
jobs:
  check-formatting:
    name: Check formatting (gofmt + goimports)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MODULE_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Check formatting (go fmt)
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Files not formatted. Run: gofmt -w ."
            exit 1
          fi
      - name: Check imports (goimports)
        run: |
          if [ -n "$(goimports -l .)" ]; then
            echo "Imports not formatted. Run: goimports -w ."
            exit 1
          fi
  lint:
    name: Lint (go vet)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MODULE_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run static analysis (go vet)
        run: go vet ./...
  tidy:
    name: Check go.mod is tidy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MODULE_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run go mod tidy
        run: |
          go mod tidy
          git diff --exit-code -- go.mod go.sum

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MODULE_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles(format('{0}/go.sum', env.MODULE_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build ./...
  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - build
    defaults:
      run:
        working-directory: ${{ env.MODULE_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles(format('{0}/go.sum', env.MODULE_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run test suite (race)
        run: go test -race -vet=off ./...
